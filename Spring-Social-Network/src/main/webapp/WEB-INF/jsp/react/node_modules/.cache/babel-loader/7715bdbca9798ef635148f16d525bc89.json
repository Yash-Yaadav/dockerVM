{"ast":null,"code":"import axios from'axios';var URL_ALL_USERS='/api/profile/users';var URL_CURRENT_USER='/api/profile/user';var URL_UPLOAD_IMAGE_PROFILE='/api/profile/';var URL_CHECK_RELATIONSHIP='/api/relationship';var URL_DELETE_RELATIONSHIP='/api/deleteRelationship';var URL_CREATE_RELATIONSHIP='/api/createRelationship';var URL_ACCEPT_RELATIONSHIP='/api/acceptRelationship';var URL_FRIEND_REQUESTS='/api/relationshipPending/';var URL_GET_CONTACTS='/api/user/';var URL_FIND_MESSAGES='/messages/';function TrainerDataService(){this.getAllUsers=getAllUsers;this.getCurrentUser=getCurrentUser;this.imageUpload=imageUpload;this.getCurrentProfile=getCurrentProfile;this.getCurrentRelationship=getCurrentRelationship;this.deleteRelationship=deleteRelationship;this.createRelationship=createRelationship;this.acceptRelationship=acceptRelationship;this.getPendingRequests=getPendingRequests;this.getContacts=getContacts;this.findChatMessages=findChatMessages;this.findChatMessage=findChatMessage;this.countNewMessages=countNewMessages;}function getAllUsers(){return axios.get(URL_ALL_USERS);}function getCurrentUser(){return axios.get(URL_CURRENT_USER);}function getCurrentProfile(userId){return axios.get(URL_CURRENT_USER+\"/\"+userId);}function getCurrentRelationship(currentUserId,profilePageId){return axios.post(URL_CHECK_RELATIONSHIP,{currentUserId:currentUserId,profilePageId:profilePageId});}function deleteRelationship(currentUserId,profilePageId){return axios.post(URL_DELETE_RELATIONSHIP,{currentUserId:currentUserId,profilePageId:profilePageId});}function createRelationship(currentUserId,profilePageId){return axios.post(URL_CREATE_RELATIONSHIP,{currentUserId:currentUserId,profilePageId:profilePageId});}function acceptRelationship(currentUserId,profilePageId){return axios.post(URL_ACCEPT_RELATIONSHIP,{currentUserId:currentUserId,profilePageId:profilePageId});}function getPendingRequests(currentUserId){return axios.get(URL_FRIEND_REQUESTS+currentUserId);}function imageUpload(userid){console.log(\"userid\",userid);return axios.post(URL_UPLOAD_IMAGE_PROFILE+userid+\"/image/upload\");}function getContacts(){return axios.get(URL_GET_CONTACTS);}function findChatMessages(senderId,recipientId){return axios.get(URL_FIND_MESSAGES+senderId+\"/\"+recipientId);}function findChatMessage(id){return axios.get(URL_FIND_MESSAGES+id);}function countNewMessages(senderId,recipientId){return axios.get(URL_FIND_MESSAGES+senderId+\"/\"+recipientId+\"/count\");}export default new TrainerDataService();","map":{"version":3,"sources":["/root/Spring-Social-Network/src/main/webapp/WEB-INF/jsp/react/src/services/DataServices.js"],"names":["axios","URL_ALL_USERS","URL_CURRENT_USER","URL_UPLOAD_IMAGE_PROFILE","URL_CHECK_RELATIONSHIP","URL_DELETE_RELATIONSHIP","URL_CREATE_RELATIONSHIP","URL_ACCEPT_RELATIONSHIP","URL_FRIEND_REQUESTS","URL_GET_CONTACTS","URL_FIND_MESSAGES","TrainerDataService","getAllUsers","getCurrentUser","imageUpload","getCurrentProfile","getCurrentRelationship","deleteRelationship","createRelationship","acceptRelationship","getPendingRequests","getContacts","findChatMessages","findChatMessage","countNewMessages","get","userId","currentUserId","profilePageId","post","userid","console","log","senderId","recipientId","id"],"mappings":"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","sourcesContent":["import axios from 'axios';\n\n\nconst URL_ALL_USERS='/api/profile/users';\nconst URL_CURRENT_USER='/api/profile/user';\nconst URL_UPLOAD_IMAGE_PROFILE='/api/profile/';\nconst URL_CHECK_RELATIONSHIP = '/api/relationship'\nconst URL_DELETE_RELATIONSHIP = '/api/deleteRelationship'\nconst URL_CREATE_RELATIONSHIP = '/api/createRelationship'\nconst URL_ACCEPT_RELATIONSHIP = '/api/acceptRelationship'\nconst URL_FRIEND_REQUESTS = '/api/relationshipPending/'\n\nconst URL_GET_CONTACTS='/api/user/';\n\nconst URL_FIND_MESSAGES='/messages/';\n\nfunction TrainerDataService(){\n\n\n    this.getAllUsers = getAllUsers;\n    this.getCurrentUser=getCurrentUser;\n    this.imageUpload=imageUpload;\n    this.getCurrentProfile = getCurrentProfile\n    this.getCurrentRelationship = getCurrentRelationship\n    this.deleteRelationship = deleteRelationship\n    this.createRelationship = createRelationship\n    this.acceptRelationship = acceptRelationship\n    this.getPendingRequests = getPendingRequests\n    this.getContacts=getContacts;\n    this.findChatMessages=findChatMessages;\n    this.findChatMessage=findChatMessage;\n    this.countNewMessages=countNewMessages;\n\n}\n\n\n\nfunction getAllUsers(){\n\n    return axios.get(URL_ALL_USERS);\n\n\n}\n\nfunction getCurrentUser(){\n\n    return axios.get(URL_CURRENT_USER);\n\n}\n\nfunction getCurrentProfile(userId) {\n    return axios.get(URL_CURRENT_USER + \"/\" + userId )\n}\n\n function getCurrentRelationship(currentUserId, profilePageId) {\n    return axios.post(URL_CHECK_RELATIONSHIP, {\n        currentUserId,\n        profilePageId\n    })\n }\n\n function deleteRelationship(currentUserId, profilePageId) {\n    return axios.post(URL_DELETE_RELATIONSHIP, {\n        currentUserId,\n        profilePageId\n    })\n }\n\n function createRelationship(currentUserId, profilePageId) {\n     return axios.post(URL_CREATE_RELATIONSHIP, {\n         currentUserId,\n         profilePageId\n     })\n }\n\n function acceptRelationship(currentUserId, profilePageId) {\n     return axios.post(URL_ACCEPT_RELATIONSHIP, {\n         currentUserId,\n         profilePageId\n     })\n }\n\n function getPendingRequests(currentUserId) {\n    return axios.get(URL_FRIEND_REQUESTS + currentUserId)\n }\n\nfunction imageUpload(userid){\n    console.log(\"userid\",userid);\n    return axios.post(URL_UPLOAD_IMAGE_PROFILE+userid+\"/image/upload\");\n\n}\n\nfunction getContacts(){\n\n    return axios.get(URL_GET_CONTACTS);\n}\n\nfunction findChatMessages(senderId,recipientId){\n    return axios.get(URL_FIND_MESSAGES + senderId + \"/\" + recipientId);\n}\n\nfunction findChatMessage(id){\n    return axios.get(URL_FIND_MESSAGES+id);\n}\n\nfunction countNewMessages(senderId,recipientId){\n    return axios.get(URL_FIND_MESSAGES+senderId+\"/\"+recipientId+\"/count\");\n}\n\nexport default (new TrainerDataService());"]},"metadata":{},"sourceType":"module"}