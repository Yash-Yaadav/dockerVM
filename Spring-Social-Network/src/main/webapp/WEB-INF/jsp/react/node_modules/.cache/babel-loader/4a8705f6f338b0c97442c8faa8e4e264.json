{"ast":null,"code":"import _slicedToArray from\"/root/Spring-Social-Network/src/main/webapp/WEB-INF/jsp/react/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React from'react';import Moment from'react-moment';var style={borderRadius:'10px'};export default function MessengerMessage(props){var createdProp=new Date(props.message.timestamp);var _React$useState=React.useState(props.message.timestamp),_React$useState2=_slicedToArray(_React$useState,2),created=_React$useState2[0],setCreated=_React$useState2[1];function isToday(someDate){var today=new Date();return someDate.getDate()==today.getDate()&&someDate.getMonth()==today.getMonth()&&someDate.getFullYear()==today.getFullYear();}function isSameYear(someDate){var today=new Date();return someDate.getFullYear()==today.getFullYear();}function formatCreated(){if(isToday(createdProp)){setCreated(createdProp.getHours()+\":\"+createdProp.getMinutes());}else if(isSameYear(createdProp)){setCreated(createdProp.toDateString().slice(0,-5));}else{setCreated(createdProp.toDateString());}}return/*#__PURE__*/React.createElement(React.Fragment,null,/*#__PURE__*/React.createElement(\"div\",{className:props.message.senderId==props.authUser.userId?\"bg-light float-right\":\"bg-secondary float-left text-light\",style:style},/*#__PURE__*/React.createElement(\"p\",{className:\"m-1\"},props.message.content)),/*#__PURE__*/React.createElement(\"br\",null),/*#__PURE__*/React.createElement(\"div\",{className:props.message.senderId==props.authUser.userId?\"text-right\":\"text-left\"},/*#__PURE__*/React.createElement(\"small\",{className:\"text-secondary\"},isToday(new Date(created))?/*#__PURE__*/React.createElement(Moment,{date:created,format:\"HH:mm\"}):isSameYear(new Date(created))?/*#__PURE__*/React.createElement(Moment,{date:created,format:\"ddd DD MMM, HH:mm\"}):/*#__PURE__*/React.createElement(Moment,{date:created,format:\"ddd DD MMM YYYY, HH:mm\"}))));}","map":{"version":3,"sources":["/root/Spring-Social-Network/src/main/webapp/WEB-INF/jsp/react/src/components/MessengerMessage.jsx"],"names":["React","Moment","style","borderRadius","MessengerMessage","props","createdProp","Date","message","timestamp","useState","created","setCreated","isToday","someDate","today","getDate","getMonth","getFullYear","isSameYear","formatCreated","getHours","getMinutes","toDateString","slice","senderId","authUser","userId","content"],"mappings":"oLAAA,MAAOA,CAAAA,KAAP,KAAkB,OAAlB,CACA,MAAOC,CAAAA,MAAP,KAAmB,cAAnB,CAEA,GAAMC,CAAAA,KAAK,CAAG,CACVC,YAAY,CAAE,MADJ,CAAd,CAIA,cAAe,SAASC,CAAAA,gBAAT,CAA0BC,KAA1B,CAAiC,CAE5C,GAAIC,CAAAA,WAAW,CAAG,GAAIC,CAAAA,IAAJ,CAASF,KAAK,CAACG,OAAN,CAAcC,SAAvB,CAAlB,CAF4C,oBAIdT,KAAK,CAACU,QAAN,CAAeL,KAAK,CAACG,OAAN,CAAcC,SAA7B,CAJc,oDAIrCE,OAJqC,qBAI5BC,UAJ4B,qBAM5C,QAASC,CAAAA,OAAT,CAAiBC,QAAjB,CAA2B,CACvB,GAAMC,CAAAA,KAAK,CAAG,GAAIR,CAAAA,IAAJ,EAAd,CACA,MAAOO,CAAAA,QAAQ,CAACE,OAAT,IAAsBD,KAAK,CAACC,OAAN,EAAtB,EACHF,QAAQ,CAACG,QAAT,IAAuBF,KAAK,CAACE,QAAN,EADpB,EAEHH,QAAQ,CAACI,WAAT,IAA0BH,KAAK,CAACG,WAAN,EAF9B,CAGH,CAED,QAASC,CAAAA,UAAT,CAAoBL,QAApB,CAA8B,CAC1B,GAAMC,CAAAA,KAAK,CAAG,GAAIR,CAAAA,IAAJ,EAAd,CACA,MAAOO,CAAAA,QAAQ,CAACI,WAAT,IAA0BH,KAAK,CAACG,WAAN,EAAjC,CACH,CAED,QAASE,CAAAA,aAAT,EAAyB,CACrB,GAAGP,OAAO,CAACP,WAAD,CAAV,CAAyB,CACrBM,UAAU,CAACN,WAAW,CAACe,QAAZ,GAAyB,GAAzB,CAA+Bf,WAAW,CAACgB,UAAZ,EAAhC,CAAV,CACH,CAFD,IAGK,IAAGH,UAAU,CAACb,WAAD,CAAb,CAA4B,CAC7BM,UAAU,CAACN,WAAW,CAACiB,YAAZ,GAA2BC,KAA3B,CAAiC,CAAjC,CAAmC,CAAC,CAApC,CAAD,CAAV,CACH,CAFI,IAGA,CACDZ,UAAU,CAACN,WAAW,CAACiB,YAAZ,EAAD,CAAV,CACH,CACJ,CAED,mBACQ,qDACI,2BAAK,SAAS,CAAElB,KAAK,CAACG,OAAN,CAAciB,QAAd,EAA0BpB,KAAK,CAACqB,QAAN,CAAeC,MAAzC,CAAkD,sBAAlD,CAA2E,oCAA3F,CAAiI,KAAK,CAAEzB,KAAxI,eACI,yBAAG,SAAS,CAAC,KAAb,EAAoBG,KAAK,CAACG,OAAN,CAAcoB,OAAlC,CADJ,CADJ,cAII,8BAJJ,cAKI,2BAAK,SAAS,CAAEvB,KAAK,CAACG,OAAN,CAAciB,QAAd,EAA0BpB,KAAK,CAACqB,QAAN,CAAeC,MAAzC,CAAkD,YAAlD,CAAiE,WAAjF,eACI,6BAAO,SAAS,CAAC,gBAAjB,EAEQd,OAAO,CAAC,GAAIN,CAAAA,IAAJ,CAASI,OAAT,CAAD,CAAP,cACI,oBAAC,MAAD,EAAQ,IAAI,CAAEA,OAAd,CAAuB,MAAM,CAAC,OAA9B,EADJ,CAGQQ,UAAU,CAAC,GAAIZ,CAAAA,IAAJ,CAASI,OAAT,CAAD,CAAV,cACI,oBAAC,MAAD,EAAQ,IAAI,CAAEA,OAAd,CAAuB,MAAM,CAAC,mBAA9B,EADJ,cAEI,oBAAC,MAAD,EAAQ,IAAI,CAAEA,OAAd,CAAuB,MAAM,CAAC,wBAA9B,EAPpB,CADJ,CALJ,CADR,CAsBH","sourcesContent":["import React from 'react';\nimport Moment from 'react-moment';\n\nconst style = {\n    borderRadius: '10px'\n};\n\nexport default function MessengerMessage(props) {\n\n    let createdProp = new Date(props.message.timestamp);\n\n    const [created, setCreated] = React.useState(props.message.timestamp);\n\n    function isToday(someDate) {\n        const today = new Date();\n        return someDate.getDate() == today.getDate() &&\n            someDate.getMonth() == today.getMonth() &&\n            someDate.getFullYear() == today.getFullYear();\n    }\n\n    function isSameYear(someDate) {\n        const today = new Date();\n        return someDate.getFullYear() == today.getFullYear();\n    }\n\n    function formatCreated() {\n        if(isToday(createdProp)) {\n            setCreated(createdProp.getHours() + \":\" + createdProp.getMinutes());\n        }\n        else if(isSameYear(createdProp)) {\n            setCreated(createdProp.toDateString().slice(0,-5));\n        }\n        else {\n            setCreated(createdProp.toDateString());\n        }\n    }\n\n    return (\n            <>\n                <div className={props.message.senderId == props.authUser.userId ? \"bg-light float-right\" : \"bg-secondary float-left text-light\"} style={style}>\n                    <p className=\"m-1\">{props.message.content}</p>\n                </div>\n                <br/>\n                <div className={props.message.senderId == props.authUser.userId ? \"text-right\" : \"text-left\"}>\n                    <small className=\"text-secondary\">\n                        {\n                            isToday(new Date(created)) ?\n                                <Moment date={created} format=\"HH:mm\"/> :\n                                (\n                                    isSameYear(new Date(created)) ?\n                                        <Moment date={created} format=\"ddd DD MMM, HH:mm\"/> :\n                                        <Moment date={created} format=\"ddd DD MMM YYYY, HH:mm\"/>\n\n                                )\n                        }\n                    </small>\n                </div>\n            </>\n    );\n}"]},"metadata":{},"sourceType":"module"}