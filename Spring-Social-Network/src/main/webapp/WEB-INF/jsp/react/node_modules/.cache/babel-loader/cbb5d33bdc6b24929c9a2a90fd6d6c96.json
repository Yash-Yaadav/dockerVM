{"ast":null,"code":"import _toConsumableArray from\"/root/Spring-Social-Network/src/main/webapp/WEB-INF/jsp/react/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";import _slicedToArray from\"/root/Spring-Social-Network/src/main/webapp/WEB-INF/jsp/react/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React from'react';import GlobalContext from\"../contexts/GlobalContext\";import Contact from\"./Contact\";import Axios from'axios';import'../css/messenger.css';import MessengerContact from\"./MessengerContact\";import MessengerMessage from\"./MessengerMessage\";import DataServices from\"../services/DataServices\";import{message}from\"antd\";export default function Messenger(props){var _React$useContext=React.useContext(GlobalContext),authenticatedUser=_React$useContext.authenticatedUser;var _React$useContext2=React.useContext(GlobalContext),activeChat=_React$useContext2.activeChat,setActiveChat=_React$useContext2.setActiveChat;var _React$useContext3=React.useContext(GlobalContext),chatMessages=_React$useContext3.chatMessages,setChatMessages=_React$useContext3.setChatMessages;var _React$useContext4=React.useContext(GlobalContext),connections=_React$useContext4.connections;var _React$useContext5=React.useContext(GlobalContext),stompClient=_React$useContext5.stompClient;var _React$useState=React.useState([]),_React$useState2=_slicedToArray(_React$useState,2),chats=_React$useState2[0],setChats=_React$useState2[1];var _React$useState3=React.useState(\"\"),_React$useState4=_slicedToArray(_React$useState3,2),message=_React$useState4[0],setMessage=_React$useState4[1];function getChatMessages(userId){if(userId){Axios.get(\"/messages/\".concat(userId,\"/\").concat(authenticatedUser.userId)).then(function(response){setChatMessages(response.data);});}}function getChats(){Axios.get('/messages/getChats').then(function(response){setChats(response.data);setActiveChat(response.data[0]);//getChatMessages(response.data[0].userId);\n});}var sendMessage=function sendMessage(msg){if(msg.trim()!==\"\"){var _message={senderId:authenticatedUser.userId,recipientId:activeChat.userId,content:msg,timestamp:new Date()};stompClient.send(\"/app/chat\",{},JSON.stringify(_message));var newMessages=_toConsumableArray(chatMessages);newMessages.push(_message);setChatMessages(newMessages);}};function submitForm(evt){evt.preventDefault();sendMessage(message);}React.useEffect(function(){getChats();},[]);React.useEffect(function(){getChatMessages(activeChat.userId);},[activeChat]);return/*#__PURE__*/React.createElement(\"div\",{className:\"col-lg-8 col-12 offset-lg-2 mt-5 pt-3\"},/*#__PURE__*/React.createElement(\"button\",{type:\"button\",className:\"btn btn-primary my-3\",\"data-toggle\":\"modal\",\"data-target\":\"#exampleModal\"},\"New Chat\"),/*#__PURE__*/React.createElement(\"div\",{className:\"modal fade\",id:\"exampleModal\",tabindex:\"-1\",role:\"dialog\",\"aria-labelledby\":\"exampleModalLabel\",\"aria-hidden\":\"true\"},/*#__PURE__*/React.createElement(\"div\",{className:\"modal-dialog\",role:\"document\"},/*#__PURE__*/React.createElement(\"div\",{className:\"modal-content\"},/*#__PURE__*/React.createElement(\"div\",{className:\"modal-header\"},/*#__PURE__*/React.createElement(\"h5\",{className:\"modal-title\",id:\"exampleModalLabel\"},\"Modal title\"),/*#__PURE__*/React.createElement(\"button\",{type:\"button\",className:\"close\",\"data-dismiss\":\"modal\",\"aria-label\":\"Close\"},/*#__PURE__*/React.createElement(\"span\",{\"aria-hidden\":\"true\"},\"\\xD7\"))),/*#__PURE__*/React.createElement(\"div\",{className:\"modal-body\"},\"...\"),/*#__PURE__*/React.createElement(\"div\",{className:\"modal-footer\"},/*#__PURE__*/React.createElement(\"button\",{type:\"button\",className:\"btn btn-secondary\",\"data-dismiss\":\"modal\"},\"Close\"),/*#__PURE__*/React.createElement(\"button\",{type:\"button\",className:\"btn btn-primary\"},\"Save changes\"))))),/*#__PURE__*/React.createElement(\"div\",{className:\"row\"},/*#__PURE__*/React.createElement(\"div\",{className:\"col-4 pr-0 tallDiv\"},/*#__PURE__*/React.createElement(\"div\",{className:\"tallDivOfChats hideScrollBar\"},chats.map(function(chat){return/*#__PURE__*/React.createElement(\"div\",null,/*#__PURE__*/React.createElement(MessengerContact,{contact:chat}));}))),/*#__PURE__*/React.createElement(\"div\",{className:\"col-8 border border-light px-0 tallDiv pb-2\"},activeChat.userId&&/*#__PURE__*/React.createElement(Contact,{userFriendId:activeChat.userId,username:activeChat.firstName+\" \"+activeChat.lastName}),/*#__PURE__*/React.createElement(\"div\",{className:\"tallOverFlow\"},/*#__PURE__*/React.createElement(\"ul\",{className:\"px-3\",style:{'listStyle':'none'}},chatMessages.map(function(msg){return/*#__PURE__*/React.createElement(\"li\",null,/*#__PURE__*/React.createElement(MessengerMessage,{message:msg,authUser:authenticatedUser}),/*#__PURE__*/React.createElement(\"br\",null));}))),/*#__PURE__*/React.createElement(\"div\",{className:\"m-3\"},/*#__PURE__*/React.createElement(\"form\",{onSubmit:submitForm},/*#__PURE__*/React.createElement(\"div\",{className:\"form-row\"},/*#__PURE__*/React.createElement(\"div\",{className:\"col-11\"},/*#__PURE__*/React.createElement(\"input\",{className:\"form-control w-80\",type:\"text\",value:message,onChange:function onChange(evt){setMessage(evt.target.value);}})),/*#__PURE__*/React.createElement(\"div\",{className:\"col-1\"},/*#__PURE__*/React.createElement(\"button\",{type:\"submit\",className:\"btn\"},/*#__PURE__*/React.createElement(\"i\",{className:\"far fa-paper-plane fa-2x\"})))))))));}","map":{"version":3,"sources":["/root/Spring-Social-Network/src/main/webapp/WEB-INF/jsp/react/src/components/Messenger.jsx"],"names":["React","GlobalContext","Contact","Axios","MessengerContact","MessengerMessage","DataServices","message","Messenger","props","useContext","authenticatedUser","activeChat","setActiveChat","chatMessages","setChatMessages","connections","stompClient","useState","chats","setChats","setMessage","getChatMessages","userId","get","then","response","data","getChats","sendMessage","msg","trim","senderId","recipientId","content","timestamp","Date","send","JSON","stringify","newMessages","push","submitForm","evt","preventDefault","useEffect","map","chat","firstName","lastName","target","value"],"mappings":"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","sourcesContent":["import React from 'react';\nimport GlobalContext from \"../contexts/GlobalContext\";\nimport Contact from \"./Contact\";\nimport Axios from 'axios';\nimport '../css/messenger.css';\nimport MessengerContact from \"./MessengerContact\";\nimport MessengerMessage from \"./MessengerMessage\";\nimport DataServices from \"../services/DataServices\";\nimport {message} from \"antd\";\n\nexport default function Messenger(props) {\n\n    const {authenticatedUser} = React.useContext(GlobalContext);\n    const {activeChat, setActiveChat} = React.useContext(GlobalContext);\n    const {chatMessages, setChatMessages} = React.useContext(GlobalContext);\n    const {connections} = React.useContext(GlobalContext);\n    const {stompClient} = React.useContext(GlobalContext);\n    const [chats, setChats] = React.useState([]);\n    const [message, setMessage] = React.useState(\"\");\n\n    function getChatMessages(userId) {\n        if (userId) {\n            Axios.get(`/messages/${userId}/${authenticatedUser.userId}`).then((response) => {\n                setChatMessages(response.data);\n            });\n        }\n    }\n\n    function getChats() {\n        Axios.get('/messages/getChats').then((response) => {\n            setChats(response.data);\n            setActiveChat(response.data[0]);\n            //getChatMessages(response.data[0].userId);\n        });\n    }\n\n    const sendMessage = (msg) => {\n        if (msg.trim() !== \"\") {\n            const message = {\n                senderId: authenticatedUser.userId,\n                recipientId: activeChat.userId,\n                content: msg,\n                timestamp: new Date(),\n            };\n            stompClient.send(\"/app/chat\", {}, JSON.stringify(message));\n            const newMessages = [...chatMessages];\n            newMessages.push(message);\n            setChatMessages(newMessages);\n        }\n    };\n\n    function submitForm(evt) {\n        evt.preventDefault();\n        sendMessage(message);\n    }\n\n    React.useEffect(() => {\n        getChats();\n    },[]);\n\n    React.useEffect(() => {\n        getChatMessages(activeChat.userId);\n    },[activeChat]);\n\n    return (\n        <div className=\"col-lg-8 col-12 offset-lg-2 mt-5 pt-3\">\n            {/*Button trigger modal*/}\n            <button type=\"button\" className=\"btn btn-primary my-3\" data-toggle=\"modal\" data-target=\"#exampleModal\">\n                New Chat\n            </button>\n\n            {/*Modal*/}\n            <div className=\"modal fade\" id=\"exampleModal\" tabindex=\"-1\" role=\"dialog\" aria-labelledby=\"exampleModalLabel\" aria-hidden=\"true\">\n                <div className=\"modal-dialog\" role=\"document\">\n                    <div className=\"modal-content\">\n                        <div className=\"modal-header\">\n                            <h5 className=\"modal-title\" id=\"exampleModalLabel\">Modal title</h5>\n                            <button type=\"button\" className=\"close\" data-dismiss=\"modal\" aria-label=\"Close\">\n                                <span aria-hidden=\"true\">&times;</span>\n                            </button>\n                        </div>\n                        <div className=\"modal-body\">\n                            ...\n                        </div>\n                        <div className=\"modal-footer\">\n                            <button type=\"button\" className=\"btn btn-secondary\" data-dismiss=\"modal\">Close</button>\n                            <button type=\"button\" className=\"btn btn-primary\">Save changes</button>\n                        </div>\n                    </div>\n                </div>\n            </div>\n            <div className=\"row\">\n                <div className=\"col-4 pr-0 tallDiv\">\n                    <div className=\"tallDivOfChats hideScrollBar\">\n                        {\n                            chats.map((chat) => (\n                                <div>\n                                    <MessengerContact  contact={chat}/>\n                                </div>\n                            ))\n                        }\n                    </div>\n                </div>\n                <div className=\"col-8 border border-light px-0 tallDiv pb-2\">\n                    { activeChat.userId &&\n                        <Contact  userFriendId = {activeChat.userId} username={ activeChat.firstName + \" \" + activeChat.lastName}/>\n                    }\n                    <div className=\"tallOverFlow\">\n                        <ul className=\"px-3\" style={{'listStyle': 'none'}}>\n                            { chatMessages.map((msg) => (\n                                <li>\n                                    <MessengerMessage message={msg} authUser={authenticatedUser}/>\n                                    <br/>\n                                </li>\n                            ))}\n                        </ul>\n                    </div>\n                    <div className=\"m-3\">\n                        <form onSubmit={submitForm}>\n                            <div className=\"form-row\">\n                                <div className=\"col-11\">\n                                    <input\n                                        className=\"form-control w-80\"\n                                        type=\"text\" value={message}\n                                        onChange={(evt) => {setMessage(evt.target.value);}}\n                                    />\n                                </div>\n                                <div className=\"col-1\">\n                                    <button type=\"submit\" className=\"btn\"><i className=\"far fa-paper-plane fa-2x\"></i></button>\n                                </div>\n                            </div>\n                        </form>\n                    </div>\n                </div>\n            </div>\n        </div>\n    );\n}"]},"metadata":{},"sourceType":"module"}